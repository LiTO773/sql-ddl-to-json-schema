/** =============================================================
 * List of keywords
 *
 * Keywords are case insensitive and prepended with 'K_'.
 */

const utils = require('../utils');

const keywords = utils.arrayToObject(
  [
    'ACTION',
    'ALGORITHM',
    'ALTER',
    'ALWAYS',
    'AS',
    'ASC',
    'AUTO_INCREMENT',
    'AVG_ROW_LENGTH',
    'BIGINT',
    'BINARY',
    'BIT',
    'BLOB',
    'BTREE',
    'BY',
    'CASCADE',
    'CHAR',
    'CHARACTER',
    'CHECK',
    'CHECKSUM',
    'COLLATE',
    'COLUMN_FORMAT',
    'COLUMNS',
    'COMMENT',
    'COMPACT',
    'COMPRESSED',
    'COMPRESSION',
    'CONNECTION',
    'CONSTRAINT',
    'CREATE',
    'DATA',
    'DATABASE',
    'DATE',
    'DATETIME',
    'DECIMAL',
    'DEFAULT',
    'DELAY_KEY_WRITE',
    'DELETE',
    'DESC',
    'DIRECTORY',
    'DISK',
    'DOUBLE',
    'DROP',
    'DYNAMIC',
    'ENCRYPTION',
    'ENGINE',
    'ENUM',
    'EXISTS',
    'FIXED',
    'FLOAT',
    'FULL',
    'FULLTEXT',
    'GENERATED',
    'GEOMETRY',
    'GEOMETRYCOLLECTION',
    'HASH',
    'IF',
    'IN',
    'INDEX',
    'INSERT_METHOD',
    'INT',
    'INTEGER',
    'JSON',
    'KEY_BLOCK_SIZE',
    'KEY',
    'LESS',
    'LINEAR',
    'LINESTRING',
    'LIST',
    'LONGBLOB',
    'LONGTEXT',
    'MATCH',
    'MAX_ROWS',
    'MAXVALUE',
    'MEDIUMBLOB',
    'MEDIUMINT',
    'MEDIUMTEXT',
    'MEMORY',
    'MIN_ROWS',
    'MULTILINESTRING',
    'MULTIPOINT',
    'MULTIPOLYGON',
    'NO',
    'NOT',
    'NULL',
    'NUMERIC',
    'ON',
    'PACK_KEYS',
    'PARSER',
    'PARTIAL',
    'PARTITION',
    'PARTITIONS',
    'PASSWORD',
    'POINT',
    'POLYGON',
    'PRIMARY',
    'RANGE',
    'REDUNDANT',
    'REFERENCES',
    'RENAME',
    'RESTRICT',
    'ROW_FORMAT',
    'SCHEMA',
    'SELECT',
    'SET',
    'SIMPLE',
    'SMALLINT',
    'SPATIAL',
    'STATS_AUTO_RECALC',
    'STATS_PERSISTENT',
    'STATS_SAMPLE_PAGES',
    'STORAGE',
    'STORED',
    'SUBPARTITION',
    'TABLE',
    'TABLESPACE',
    'TEMPORARY',
    'TEXT',
    'THAN',
    'TIME',
    'TIMESTAMP',
    'TINYBLOB',
    'TINYINT',
    'TINYTEXT',
    'UNION',
    'UNIQUE',
    'UPDATE',
    'USING',
    'VALUES',
    'VARBINARY',
    'VARCHAR',
    'VIEW',
    'VIRTUAL',
    'WITH',
    'YEAR',

  ],

  /*
   * Prepend K_ to keywords.
   */
  string => `K_${string}`,

  /*
   * Make case insensitive regexp from a keyword.
   * Example: WORD -> /[Ww][Oo][Rr][Dd]/
   */
  string => new RegExp(
    string.split('')
      .reduce((str, char) => {
        str += `[${char.toUpperCase()}${char.toLowerCase()}]`;
        return str;
      }, '')
  )
);

module.exports = keywords;
